
🎃 User Guide
    Cutadapt searches for the adapter in all reads and removes it when it finds it
    Unless you use a filtering option, all reads that were present in the input file will also be present in the output file, some of them trimmed, some of them not
    Even reads that were trimmed to a length of zero are output. All of this can be changed with command-line options, explained further down

    ・input formats are FASTA, FASTQ and unaligned BAM
    ・output formats are FASTA and FASTQ
    ・compression formats are gzip (.gz), bzip2 (.bz2), xz (.xz) and zstandard (.zst)

    Cutadapt uses the xopen library to speed up reading and writing compressed files

🖼 Read processing stages
    modify and filter reads and to redirect them to various output files. Each read is processed in the following order:
        1. Read modification options are applied. This includes adapter removal, quality trimming, read name modifications etc. 
        🌕 The order in which they are applied is the order in which they are listed in the help shown by cutadapt --help under the “Additional read modifications” heading
        Adapter trimming itself does not appear in that list and is done after quality trimming and before length trimming (--length/-l).

        2.Filtering options are applied, such as removal of too short or untrimmed reads
        Some of the filters also allow to redirect a read to a separate output file
        The filters are applied in the order in which they are listed in the help shown by cutadapt --help under the “Filtering of processed reads” heading.

        3.If the read has passed all the filters, it is written to the output file

🗓 Adapter types
    By default, all adapters are searched error-tolerantly 
    Adapter sequences may also contain any IUPAC wildcard character (degenerate bases) (such as N).

    # DADA2とは機能は被りそう?? [----- Mar 15, 2024 at 23:25:21 -----]
    In addition, it is possible to remove a fixed number of bases from the beginning or end of each read, 
    to remove low-quality bases (quality trimming) from the 3’ and 5’ ends, and to search for adapters also in the reverse-complemented reads

    ⭐️ Adapter type                Command-line option   
    Regular 3’ adapter          -a ADAPTER
    Regular 5’ adapter          -g ADAPTER
    Non-internal 3’ adapter     -a ADAPTERX
    Non-internal 5’ adapter     -g XADAPTER
    Anchored 3’ adapter         -a ADAPTER$
    Anchored 5’ adapter         -g ^ADAPTER
    5’ or 3’ (both possible)    -b ADAPTER
    Linked adapter              -a ^ADAPTER1...ADAPTER2
                                -g ADAPTER1...ADAPTER2


    # Regular 3’ adapters
    A 3’ adapter is a piece of DNA ligated to the 3’ end of the DNA fragment of interest
    The sequencer starts the sequencing process at the 5’ end of the fragment
    If the fragment is shorter than the read length, the sequencer will sequence into the adapter and the reads will thus contain some part of the adapter
    Depending on how much longer the read is than the fragment of interest : 
    ・not at all
    ・partially or fully at the end of the read (not followed by any other bases)
    ・in full somewhere within the read, followed by some other bases

    Using -a ADAPTER to remove this type of adapter, this will be the result:
    mysequen
    mysequenceADAP
    mysequenceADAPTER
    mysequenceADAPTERsomethingelse

    mysequen
    mysequence
    mysequence
    mysequence

    Cutadapt allows regular 3’ adapters to occur in full anywhere within the read (preceeded and/or succeeded by zero or more bases)
    and also partially degraded at the 3’ end. Cutadapt deals with 3’ adapters by removing the adapter itself 
    and any sequence that may follow. As a consequence, a sequence that starts with an adapter, like this, will be trimmed to an empty read:

    ADAPTERsomething

    # Regular 5’ adapters
    All the sequences are trimmed to mysequence when you use -g ADAPTER
    ADAPTERmysequence
    DAPTERmysequence
    TERmysequence
    somethingADAPTERmysequence

    somethingADAPTER
    will be empty after trimming

    # Anchored 5’ adapters [実際に使用後, 再度User Guideへ]
    An anchored 5’ adapter is an adapter that is expected to occur in 🌕 full length at the beginning of the read. Example:
    
    ADAPTERsomething

    # Anchored 3’ adapters
    This is useful, for example, if you work with merged overlapping paired-end reads

    The requirement for a full match exactly at the end of the read is relaxed when Cutadapt searches error-tolerantly, as it does by default
    You can disable insertions and deletions with --no-indels

    mysequenceADAP
    mysequenceADAPTER
    mysequenceADAPTERsomethingelse
    
    Using -a ADAPTER$ will result in:

    mysequenceADAP
    mysequence
    mysequenceADAPTERsomethingelse

    # Linked adapters (combined 5’ and 3’ adapter)
    If your sequence of interest is surrounded by a 5’ and a 3’ adapter, and you want to remove both adapters, then you can use a linked adapter

⚪ Searching reverse complements
    For paired-end reads, reverse complementing is done by swapping R1 and R2.

    🌕 To determine whether the forward or reverse-complemented sequence yields the better match, the full adapter search is done independently on both versions, 
    and the version that results in the higher number of matching nucleotides is considered to be the better one.

🏅 Specifying adapter sequences : Wildcards
    Wildcard characters are by default only allowed in adapter sequences and are not recognized when they occur in a read. 
    This is to avoid matches in reads that consist of many (often low-quality) N bases Use --match-read-wildcards to enable wildcards also in reads.

🔊 Modifying reads (色々ReadのTrimming設定可能[240316])
    See also: Read modification order [https://cutadapt.readthedocs.io/en/stable/reference.html#read-modification-order]

🌃 Removing a fixed number of bases
    By using the --cut option or its abbreviation -u, it is possible to unconditionally remove bases from the beginning or end of each read
    If the given length is positive, the bases are removed from the beginning of each read. If it is negative, the bases are removed from the end

    🌕 The -u/--cut option can be combined with the other options, but the --cut is applied before any adapter trimming

🇨🇿 Quality trimming
    The -q (or --quality-cutoff) parameter can be used to trim low-quality ends from reads
    If you specify a single cutoff value, the 3’ end of each read is trimmed:

    cutadapt -q 10 -o output.fastq input.fastq

    For Illumina reads, this is sufficient as their quality is high at the beginning, but degrades towards the 3’ end
    For paired-end data, quality trimming is by default applied to both reads using the same cutoff(s). Use option -Q to specify different cutoffs for R2:

    cutadapt -q 5 -Q 15,20 -o out.1.fastq -p out.2.fastq in.1.fastq in.2.fastq
    
    To disable quality-trimming of R2, use -Q 0.

🇦🇨 Shortening reads to a fixed length
    To shorten each read down to a certain length, use the --length option or the short version -l:

    cutadapt -l 10 -o output.fastq.gz input.fastq.gz

    This shortens all reads from input.fastq.gz down to 10 bases. The removed bases are those on the 3’ end.
    If you want to remove a fixed number of bases from each read, use the –cut option instead.

▶ Filtering reads
    By default, all processed reads, no matter whether they were trimmed or not, are written to the output file specified by the -o option (or to standard output if -o was not provided)
    For paired-end reads, the second read in a pair is always written to the file specified by the -p option.
    
    Filters are applied to all processed reads, no matter whether they have been modified by adapter- or quality trimming.

📑 Trimming paired-end reads
    provide two input files and a second output file with the -p option (this is the short form of --paired-output)
    This is the basic command line syntax:

    cutadapt -a ADAPTER_FWD -A ADAPTER_REV -o out.1.fastq -p out.2.fastq reads.1.fastq reads.2.fastq

    In paired-end mode, the options -a, -b, -g and -u that also exist in single-end mode are applied to the forward reads only. To modify the reverse read, these options have uppercase versions -A, -B, -G and -U that work just like their counterparts
    In the example above, ADAPTER_FWD will therefore be trimmed from the forward reads and ADAPTER_REV from the reverse reads.

    🌕 In paired-end mode, Cutadapt checks whether the input files are properly paired. An error is raised if one of the files contains more reads than the other or if the read names in the two files do not match
    
