

## 仮想環境の起動
   conda info -e
   conda activate qiime2-amplicon-2023.9
   cd /Users/saitoikuto/miniforge3/envs/qiime2-amplicon-2023.9 

## Helpの参照
   qiime --help                           qiime_pluginの参照
   qiime .plugin --help                   pluginのactionを参照  
   qiime                                  plugin,built-in cmdの参照
   qiime info                             installed plugin,versionの表示
       
## cmd(plugin)
   q2-feature-classifier   alignmentのconsensusの分類(×機械学習)
   (classify-consensus-vsearch, classify-consensus-blast)
   classify-sklearn        機械学習ベースの分類(参照database,markerGeneといった追加のstepが必要)

## DataImport_type
   qiime tools list-formats --importable  import可能なdata形式
   PairedEndFastqManifestPhred33, PairedEndFastqManifestPhred33V2, SingleEndFastqManifestPhred33
   qiime tools list-types    
   SampleData[SequencesWithQuality],SampleData[JoinedSequencesWithQuality],SampleData[PairedEndSequencesWithQuality]

[240215]
   # pattern1.
   conda activate qiime2-amplicon-2023.9
   qiime tools import \
   --type 'SampleData[SequencesWithQuality]' \
   --input-path filepath \
   --output-path paired-end-demux.qza \
   --input-format PairedEndFastqManifestPhred33

   # pattern2.
   qiime tools import \
   --type 'SampleData[SequencesWithQuality]' \
   --input-path filepath \
   --output-path paired-end-demux.qza \
   --input-format SingleEndFastqManifestPhred33

   # pattern3.
   qiime tools import \
   --type 'SampleData[SequencesWithQuality]' \
   --input-path metadata.tsv \
   --output-path paired-end-demux.qza \
   --input-format SingleEndFastqManifestPhred33

   # pattern4.
   qiime tools import \
   --type 'SampleData[SequencesWithQuality]' \
   --input-path metadata.tsv \
   --output-path paired-end-demux.qza \
   --input-format PairedEndFastqManifestPhred33

   # pattern5.
   qiime tools import \
   --type 'SampleData[PairedEndSequencesWithQuality]' \
   --input-path metadata_v1.tsv \
   --output-path paired-end-demux.qza \
   --input-format PairedEndFastqManifestPhred33

   # pattern6. [/Users/saitoikuto/miniforge3/envs/qiime2-amplicon-2023.9/00.RawData/filepath
   (qiime2-amplicon-2023.9)]
   qiime tools import \
   --type 'SampleData[PairedEndSequencesWithQuality]' \
   --input-path metadata_v2.tsv \
   --output-path paired-end-demux.qza \
   --input-format PairedEndFastqManifestPhred33

   # pattern7. [/Users/saitoikuto/miniforge3/envs/qiime2-amplicon-2023.9/00.RawData/filepath
   (qiime2-amplicon-2023.9)]
   qiime tools import \
   --type 'SampleData[PairedEndSequencesWithQuality]' \
   --input-path metadata_v2.tsv \
   --output-path paired-end-demux.qza \
   --input-format PairedEndFastqManifestPhred33V2

[fastq → QIIMEArtifact(qza)]
⭐️# pattern8. [/Users/saitoikuto/miniforge3/envs/qiime2-amplicon-2023.9/NGS_RawData/filepath
(qiime2-amplicon-2023.9)] 
qiime tools import \
--type 'SampleData[PairedEndSequencesWithQuality]' \
--input-path metadata_v2.txt \
--input-format PairedEndFastqManifestPhred33V2 \
--output-path paired-end-demux.qza 

⭐️[QCcheck] → demux
qiime demux summarize \
--i-data paired-end-demux.qza \
--o-visualization paired-end-demux.qzv 
[QCcheck-visualization]
qiime tools view paired-end-demux.qzv



--------------------------------------------------

## tutorial     [SRA_DataのDownload [次世代シーケンサ DRY 解析教本より]]
   1. ImportData
   prefetch --option-file SRR_Acc_List.txt [accession_num_list]                cdに各accession_num.fileが作成される

   # |はパイプであり, xargs -n1(一つずつ)にてfastq-dump cmdに引数を渡す  
   # 各SRA.fileをfastq.fileへfastq-dump cmdにて変換, xargsは要学習
   at ../SRR_Acc_List.txt | xargs -n1 fastq-dump --gzip --split-files          莫大な時間がかかる
   ls * 
   ls * | wc -l

   # fastq.file → SampleName_S1_L001.tastq.gzのようにrename
   # (Perl) rename cmdを使用,cd内.fastq.gzに対し,_1 → _S1_L001_R1_001に置換, 正規表現を使用可能
   rename 's/_1/_S1_L001_R1_001/' *.fastq.gz
   rename 's/_2/_S1_L001_R2_001/' *.fastq.gz

   2. Analysis
   conda activate qiime2-amplicon-2023.9
   cd /Users/saitoikuto/miniforge3/envs/qiime2-amplicon-2023.9/QIIME_practice

   # .fastq import 
   qiime tools import \
   --type 'SampleData[PairedEndSequencesWithQuality]' \
   --input-path fastq \
   --input-format CasavaOneEightSingleLanePerSampleDirFmt \
   --output-path demux.qza

   # summary.file
   qiime demux summarize \
   --i-data demux.qza \
   --o-visualization demux.qzv

   # graphic(visualization)            https://view.qiime2.org/
   # interactive quality plot tab → read_long_density 拡大したい領域を選択でzoom, ダブルタップで解除
   ⭐️ qiime tools view                 file.qzv(.qzvが存在するdirectoryに移動する必要)

   # DADA2[trimming,merge,clustering,OTUs,chimera] (240211,20m程度必要)
   qiime dada2 denoise-paired \                    denoiseする方法を選択
   --verbose \
   --p-n-threads 0 \                               使用可能な全CPUコアを使用
   --p-trim-left-f 17 \                            ForwardPrimer_5'からTrimmingする数=PrimerLength
   --p-trim-left-r 21 \                            ReversePrimer_5'からTrimmingする数=PrimerLength
   --p-trunc-len-f 290 \                           ForwardPrimer_5'から使用する塩基数(以降がtrimming)
   --p-trunc-len-r 250 \                           ReversePrimer_5'から使用する塩基数(以降がtrimming)
   --i-demultiplexed-seqs demux.qza \
   --o-table table.qza \
   --o-representative-sequences rep-seqs.qza \
   --o-denoising-stats stats-dada2.qza

   2) Filtering .......................
   3) Learning Error Rates
   284179896 total bases in 1040952 reads from 15 samples will be used for learning the error rates.
   238378008 total bases in 1040952 reads from 15 samples will be used for learning the error rates.
   3) Denoise samples .......................
   .......................
   5) Remove chimeras (method = consensus)
   6) Report read numbers through the pipeline
   7) Write output
   # .qzaが3つartifactとして作成される
   Saved FeatureTable[Frequency] to: table.qza     
   Saved FeatureData[Sequence] to: rep-seqs.qza
   Saved SampleData[DADA2Stats] to: stats-dada2.qza

   # DADA2[summary.file]
   qiime metadata tabulate \
   --m-input-file stats-dada2.qza \
   --o-visualization stats-dada2.qzv

   qiime feature-table summarize \             Number of features=OTUs
   --i-table table.qza \
   --o-visualization table.qzv \
   --m-sample-metadata-file metadata.txt       予め[ID,treatment,sample]等の情報を記載した.txtにtableを追加する

   qiime feature-table tabulate-seqs \         Featureの代表配列を算出
   --i-data rep-seqs.qza \
   --o-visualization rep-seqs.qzv

   # 分子系統樹[要学習-240211]
   qiime phylogeny align-to-tree-mafft-fasttree \
   --i-sequences rep-seqs.qza \
   --o-alignment aligned-rep-seqs.qza \
   --o-masked-alignment masked-aligned-rep-seqs.qza \
   --o-tree unrooted-tree.qza \
   --o-rooted-tree rooted-tree.qza

   # α/β多様性
   qiime diversity core-metrics-phylogenetic \
   --i-phylogeny rooted-tree.qza \
   --i-table table.qza \
   --p-sampling-depth 43256 \
   --m-metadata-file metadata.txt \
   --output-dir core-metrics-results

   qiime diversity alpha-group-significance \
   --i-alpha-diversity core-metrics-results/observed_features_vector.qza \
   --m-metadata-file metadata.txt \
   --o-visualization core-metrics-results/observed_otus-group-significance.qzv

   qiime diversity alpha-group-significance \
   --i-alpha-diversity core-metrics-results/shannon_vector.qza \
   --m-metadata-file metadata.txt \
   --o-visualization core-metrics-results/shannon-group-significance.qzv

   qiime diversity alpha-group-significance \
      --i-alpha-diversity core-metrics-results/faith_pd_vector.qza \
      --m-metadata-file metadata.txt \
      --o-visualization core-metrics-results/faith-pd-group-significance.qzv

   qiime diversity beta-group-significance \
   --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \
   --m-metadata-file metadata.txt \
   --m-metadata-column group \                      metadata.txtのgroupColumnで群分けされる
   --o-visualization core-metrics-results/unweighted-unifrac-group-significance.qzv \
   --p-pairwise

   qiime diversity beta-group-significance \
   --i-distance-matrix core-metrics-results/weighted_unifrac_distance_matrix.qza \
   --m-metadata-file metadata.txt \
   --m-metadata-column group \
   --o-visualization core-metrics-results/weighted-unifrac-group-significance.qzv \
   --p-pairwise

   # 系統解析
   qiime feature-classifier classify-sklearn \
   --p-n-jobs -1 \
   --i-classifier gg-13-8-99-nb-classifier.qza \
   --i-reads rep-seqs.qza \
   --o-classification taxonomy.qza

   qiime metadata tabulate \
   --m-input-file taxonomy.qza \
   --o-visualization taxonomy.qzv
   # 分類別のhistgramが作成される
   qiime taxa barplot \
   --i-table table.qza \
   --i-taxonomy taxonomy.qza \
   --m-metadata-file metadata.txt \
   --o-visualization taxa-bar-plots.qzv

   # heatmap
   qiime taxa collapse \
   --i-table table.qza \
   --i-taxonomy taxonomy.qza \
   --p-level 5 \
   --o-collapsed-table table-l5.qza

   qiime feature-table heatmap \
   --i-table table-l5.qza \
   --m-sample-metadata-file metadata.txt \
   --m-sample-metadata-column group \
   --o-visualization heatmap_l5_group.qzv

   # 変動菌種の推定 [要学習-240212]
   qiime feature-table filter-samples \
   --i-table table.qza \
   --m-metadata-file metadata.txt \
   --p-where "host_genotype='ob'" \            obのみを抽出
   --o-filtered-table table_ob.qza

   qiime taxa collapse \
   --i-table table_ob.qza \
   --i-taxonomy taxonomy.qza \
   --p-level 5 \
   --o-collapsed-table table_ob_l5.qza

   qiime composition add-pseudocount \
   --i-table table_ob_l5.qza \
   --o-composition-table comp_table_ob_l5.qza

   qiime composition ancom \
   --i-table comp_table_ob_l5.qza \
   --m-metadata-file metadata.txt \
   --m-metadata-column host_diet \
   --o-visualization ancom_table_ob_l5_diet.qzv




--------------------------------------------------
